name: Build

on:
  push:
    schedule:
      - cron: "0 10 * * *" # everyday at 10am
    tags:
      - "v*.*.*"
    push:
      branches:
        - master
    pull_request:
      branches:
        - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Fetch all tags and branches
        run: git fetch --prune --unshallow

      - uses: actions/setup-dotnet@v3.2.0
        with:
          # need at least .NET 6 to build
          dotnet-version: '6.0.400'
          include-prerelease: true
      - uses: actions/setup-dotnet@v3.2.0
        with:
          # need at least .NET 7 to build
          dotnet-version: '7.0.401'
          include-prerelease: true

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.x
          include-prerelease: true

      - name: Cache Tools
        uses: actions/cache@v3
        with:
          path: tools
          key: ${{ runner.os }}-tools-${{ hashFiles('build.cake') }}

      - name: Build project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        uses: cake-build/cake-action@v1.4.1
        with:
          script-path: build.cake
          target: SonarEnd
          verbosity: Diagnostic
          cake-version: 3.1.0
          arguments: |
            token: ${{ secrets.SONAR_TOKEN }}
            mode: CI
  
  
  
  integrationtest:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    
    steps:
      - uses: actions/checkout@v3
      - name: Run Mockoon CLI
        uses: mockoon/cli-action@v1
        with:
          # Mockoon CLI version, default to 'latest'
          version: "latest"
          # Mockoon local data file or URL
          data-file: "./tests/Cake.DependencyTrack.Integration.Tests/mockoon-data.json"
          # port, default to 3000
          port: 3000
      - name: Make test call
        run: curl -X GET http://localhost:3000/endpoint